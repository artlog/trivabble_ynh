#!/bin/bash

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..." --time --weight=1

### `ynh_setup_source` is used to install an app from a zip or tar.gz file,
### downloaded from an upstream source, like a git repository.
### `ynh_setup_source` use the file conf/app.src

ynh_app_setting_set --app=$app --key=final_path --value=$final_path

# temporary intermediate directory since it contains more files than needed
build_dest_dir=$(mktemp --directory --tmpdir="/tmp")

if [[ -n "$build_dest_dir" ]] && [[ -d "$build_dest_dir" ]]
then
    # Download, check integrity, uncompress and patch the source from app.src
    ynh_setup_source --dest_dir="$build_dest_dir"

    # required to build i10n client support
    pushd "$build_dest_dir"
    ynh_script_progression "Start building from $(pwd) " --time --weight=1
    PORT=$port make
    popd
else
    ynh_die "Failed to create a directory for build '$build_dest_dir'"
fi

# check that l10n build succeeded
if [[ ! -d $build_dest_dir/public/l10n/js ]] ; then
    echo "list content of  $build_dest_dir for forensics" >&2
    # to have some trace  of what did fail
    find  $build_dest_dir/
    ynh_die "expected public js directory for i10n not found in $(pwd)/$build_dest_dir"
fi

# deliver it to $final_path ( hack copy subpart of bin/upgrade-prod.sh )

echo "Sending to production..."

WORKING_DIRECTORY=$build_dest_dir
PROD_PUBLIC_DIR=$final_path/public
PROD_SERVER_DIR=$final_path/server

mkdir -p $PROD_PUBLIC_DIR
mkdir -p $PROD_SERVER_DIR

# this is where we needed rsync
rsync -avp --delete --exclude 'config.js' "$WORKING_DIRECTORY/public/" "$PROD_PUBLIC_DIR/"
rsync -avp --delete --exclude 'config.js' "$WORKING_DIRECTORY/server/" "$PROD_SERVER_DIR/"

rm -rf $build_dest_dir

# Download, check integrity, uncompress and patch the source from app.src
# ynh_setup_source --dest_dir="$final_path"
